kind : pipeline
name : CodeVerification
type : docker

trigger :
  event :
    - push
    - tag

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :

  - name : code-coverage-gate
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      RABBITMQ_HOST : rabbitmq
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn -version
      - mvn dependency:resolve -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn clean verify -Dstyle.color=always -Dmaven.javadoc.skip=true -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD

  - name : static-analysis-gate
    depends_on :
      - code-coverage-gate
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
      SONAR_HOST :
        from_secret : SONAR_HOST
      SONAR_TOKEN :
        from_secret : SONAR_TOKEN
    commands :
      - mvn org.apache.maven.plugins:maven-dependency-plugin:3.3.0:copy-dependencies -Dmdep.prependGroupId=true -Dstyle.color=always -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn sonar:sonar '-Dsonar.java.libraries=target/dependency/*.jar' '-Dsonar.java.test.libraries=target/classes,target/dependency/*.jar' -Dsonar.qualitygate.wait=true -Dsonar.qualitygate.timeout=300 -Dsonar.host.url=$SONAR_HOST -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=${DRONE_REPO_OWNER}:${DRONE_REPO_NAME} -Dsonar.projectName=${DRONE_REPO_OWNER}:${DRONE_REPO_NAME} -Dstyle.color=always -Dmaven.javadoc.skip=true --batch-mode -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn pmd:check --batch-mode -Dstyle.color=always -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.0:check -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD  -Dspotbugs.xmlOutput=true -Dspotbugs.failOnError=true -Dspotbugs.excludeFilterFile=../spotbugs-exclude.xml -Dspotbugs.includeTests=true -Dstyle.color=always

services :
  - name : rabbitmq
    image : rabbitmq:3.11-management-alpine
    environment :
      RABBITMQ_DEFAULT_USER : svc_testing
      RABBITMQ_DEFAULT_PASS : svc_testing

---

kind : pipeline
name : ArtifactsPublishing
type : docker

trigger :
  event :
    - push
    - tag
  ref :
    - refs/heads/develop
    - refs/heads/prerelease*
    - refs/heads/*.*.x
    - refs/tags/*

depends_on :
  - CodeVerification

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :
  - name : publish-snapshot-jar
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -Dstyle.color=always -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD -DaltDeploymentRepository=manufacturing-snapshots-repository::https://nexus.continuousdelivery.store/repository/maven-snapshots
    when :
      branch :
        include :
          - "develop"
          - "prerelease/*"
          - "*.*.x"

  - name : publish-release-jar
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -Dstyle.color=always -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD -DaltDeploymentRepository=manufacturing-releases-repository::https://nexus.continuousdelivery.store/repository/maven-releases
    when :
      ref :
        - "refs/tags/*"

  - name : create-github-release
    image : plugins/github-release
    settings :
      api_key :
        from_secret : GITHUB_API_KEY
      title : ${DRONE_TAG}
      note : "**Full Changelog**: https://github.com/${DRONE_REPO}/commits/${DRONE_TAG}"
      files : ./target/*.jar
    when :
      ref :
        - "refs/tags/*"
    depends_on :
      - publish-release-jar

---

kind : pipeline
name : DockerImagePublishing
type : docker

trigger :
  event :
    - push
    - tag

depends_on :
  - ArtifactsPublishing

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :
  - name : package-jar
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn package -Dstyle.color=always -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true --batch-mode -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD

  - name : build-container-with-feature
    depends_on :
      - package-jar
    image : plugins/docker
    settings :
      dockerfile : ./.drone/Dockerfile
      context : ./
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.continuousdelivery.store/${DRONE_REPO_OWNER}/quickstart-amqp-consuming-hello
      registry : docker-registry.continuousdelivery.store
      force_tag : true
      build_args :
        - BASE_IMAGE=docker-registry.c2a2.com/jre:ibm-semeru-runtimes-open-17-jre-focal
        - BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_BRANCH:22}
        - ${DRONE_COMMIT}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-release-image
    depends_on :
      - package-jar
    image : plugins/docker
    settings :
      dockerfile : ./.drone/Dockerfile
      context : ./
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.continuousdelivery.store/${DRONE_REPO_OWNER}/quickstart-amqp-consuming-hello
      registry : docker-registry.continuousdelivery.store
      force_tag : true
      build_args :
        - BASE_IMAGE=docker-registry.c2a2.com/jre:ibm-semeru-runtimes-open-17-jre-focal
        - BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"

---

kind : pipeline
name : PromoteFeatureDeployment
type : docker
trigger :
  event :
    - promote
  target :
    - sit
  ref :
    - "refs/heads/feature/containerized-*"

steps :
  - name : deploy
    failure : ignore
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    environment :
      SVC_CHARTS_REPOSITORY :
        from_secret : SVC_CHARTS_REPOSITORY
    commands :
      - git clone $${SVC_CHARTS_REPOSITORY} charts && cd charts
      - helm install ${DRONE_REPO_NAME} ./${DRONE_REPO_NAME} --values ./${DRONE_REPO_NAME}/${DRONE_DEPLOY_TO}-values.yaml --set image.tag=${DRONE_COMMIT} -n ${DRONE_DEPLOY_TO}-environment

---

kind : pipeline
name : RollbackFeatureDeployment
type : docker
trigger :
  event :
    - rollback
  target :
    - sit
  ref :
    - "refs/heads/feature/containerized-*"

steps :
  - name : rollback
    failure : ignore
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    environment :
      SVC_CHARTS_REPOSITORY :
        from_secret : SVC_CHARTS_REPOSITORY
    commands :
      - git clone $${SVC_CHARTS_REPOSITORY} charts && cd charts
      - helm uninstall ${DRONE_REPO_NAME} -n ${DRONE_DEPLOY_TO}-environment

---

kind : pipeline
name : PromoteDeployment
type : docker
trigger :
  event :
    - promote
  target :
    - uat
    - production
  ref :
    - "refs/tags/*"

steps :
  - name : deploy
    failure : ignore
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    environment :
      SVC_CHARTS_REPOSITORY :
        from_secret : SVC_CHARTS_REPOSITORY
    commands :
      - git clone $${SVC_CHARTS_REPOSITORY} charts && cd charts
      - helm install ${DRONE_REPO_NAME} ./${DRONE_REPO_NAME} --values ./${DRONE_REPO_NAME}/${DRONE_DEPLOY_TO}-values.yaml --set image.tag=${DRONE_TAG} -n ${DRONE_DEPLOY_TO}-environment

---

kind : pipeline
name : RollbackDeployment
type : docker
trigger :
  event :
    - rollback
  target :
    - uat
    - production
  ref :
    - "refs/tags/*"

steps :
  - name : rollback
    failure : ignore
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    environment :
      SVC_CHARTS_REPOSITORY :
        from_secret : SVC_CHARTS_REPOSITORY
    commands :
      - git clone $${SVC_CHARTS_REPOSITORY} charts && cd charts
      - helm uninstall ${DRONE_REPO_NAME} -n ${DRONE_DEPLOY_TO}-environment

---

kind : pipeline
name : ManualRelease
type : docker
trigger :
  event :
    - custom
  branch :
    - "develop"
    - "*.*.x"

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :
  - name : create-release-tag
    failure : ignore
    image : docker-registry.continuousdelivery.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    commands :
      - echo Prepare new version ${RELEASE_VERSION}
      - export NEXT_SNAPSHOT=${SNAPSHOT_VERSION}-SNAPSHOT
      - export GIT_AUTHOR_NAME=$${SVC_BUILD_GIT_USERNAME}
      - export GIT_AUTHOR_EMAIL=$${SVC_BUILD_GIT_EMAIL}
      - export GIT_COMMITTER_NAME=$${SVC_BUILD_GIT_USERNAME}
      - export GIT_COMMITTER_EMAIL=$${SVC_BUILD_GIT_EMAIL}
      - git remote set-url --push origin ${DRONE_GIT_SSH_URL}
      - git checkout -b v${RELEASE_VERSION}
      - mvn versions:set -DremoveSnapshot
      - mvn versions:set -DnewVersion=${RELEASE_VERSION}
      - mvn versions:update-parent
      - >-
        git commit -a -m "feat: bump version to $${RELEASE_VERSION}"
      - git tag ${RELEASE_VERSION} && git push origin ${RELEASE_VERSION}
      - echo "✅ Release tag ${RELEASE_VERSION} was created."
      - sleep 10
      - git tag -d ${RELEASE_VERSION} && git checkout ${DRONE_COMMIT_BRANCH} && git branch -D v${RELEASE_VERSION}
      - mvn versions:set -DnewVersion=$${NEXT_SNAPSHOT}
      - mvn versions:update-parent -DallowSnapshots=true
      - >-
        git commit -a -m "feat: create new $${NEXT_SNAPSHOT}"
      - git push origin ${DRONE_COMMIT_BRANCH}
      - echo "✅ Started $${NEXT_SNAPSHOT}."
      - echo "🚀 Good job, new version ${RELEASE_VERSION} was released successfully."
